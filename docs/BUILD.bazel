load("@rules_haskell//haskell:defs.bzl", "haskell_doc")
load("@rules_python//python:defs.bzl", "py_binary")
load("@rules_pkg//:mappings.bzl", "pkg_files", "strip_prefix")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

haskell_doc(
    name = "docs",
    # Disables generating the huge multi-package ./index.
    # See: //:third_party/rules_haskell/haddock_index.patch
    index = False,
    # The deps attribute is auto-populated by buildozer via scripts/generate.
    deps = [
        "//lib/amazonka",
        "//lib/amazonka-core",
        "//lib/amazonka-s3-encryption",
        "//lib/amazonka-test",
        "//lib/services/amazonka-accessanalyzer",
        "//lib/services/amazonka-account",
        "//lib/services/amazonka-alexa-business",
        "//lib/services/amazonka-amp",
        "//lib/services/amazonka-amplify",
        "//lib/services/amazonka-amplifybackend",
        "//lib/services/amazonka-apigateway",
        "//lib/services/amazonka-apigatewaymanagementapi",
        "//lib/services/amazonka-apigatewayv2",
        "//lib/services/amazonka-appconfig",
        "//lib/services/amazonka-appflow",
        "//lib/services/amazonka-appintegrations",
        "//lib/services/amazonka-application-autoscaling",
        "//lib/services/amazonka-application-insights",
        "//lib/services/amazonka-applicationcostprofiler",
        "//lib/services/amazonka-appmesh",
        "//lib/services/amazonka-apprunner",
        "//lib/services/amazonka-appstream",
        "//lib/services/amazonka-appsync",
        "//lib/services/amazonka-athena",
        "//lib/services/amazonka-auditmanager",
        "//lib/services/amazonka-autoscaling",
        "//lib/services/amazonka-autoscaling-plans",
        "//lib/services/amazonka-backup",
        "//lib/services/amazonka-batch",
        "//lib/services/amazonka-braket",
        "//lib/services/amazonka-budgets",
        "//lib/services/amazonka-certificatemanager",
        "//lib/services/amazonka-certificatemanager-pca",
        "//lib/services/amazonka-chime",
        "//lib/services/amazonka-chime-sdk-identity",
        "//lib/services/amazonka-chime-sdk-messaging",
        "//lib/services/amazonka-cloud9",
        "//lib/services/amazonka-cloudcontrol",
        "//lib/services/amazonka-clouddirectory",
        "//lib/services/amazonka-cloudformation",
        "//lib/services/amazonka-cloudfront",
        "//lib/services/amazonka-cloudhsm",
        "//lib/services/amazonka-cloudhsmv2",
        "//lib/services/amazonka-cloudsearch",
        "//lib/services/amazonka-cloudsearch-domains",
        "//lib/services/amazonka-cloudtrail",
        "//lib/services/amazonka-cloudwatch",
        "//lib/services/amazonka-cloudwatch-events",
        "//lib/services/amazonka-cloudwatch-logs",
        "//lib/services/amazonka-codeartifact",
        "//lib/services/amazonka-codebuild",
        "//lib/services/amazonka-codecommit",
        "//lib/services/amazonka-codedeploy",
        "//lib/services/amazonka-codeguru-reviewer",
        "//lib/services/amazonka-codeguruprofiler",
        "//lib/services/amazonka-codepipeline",
        "//lib/services/amazonka-codestar",
        "//lib/services/amazonka-codestar-connections",
        "//lib/services/amazonka-codestar-notifications",
        "//lib/services/amazonka-cognito-identity",
        "//lib/services/amazonka-cognito-idp",
        "//lib/services/amazonka-cognito-sync",
        "//lib/services/amazonka-comprehend",
        "//lib/services/amazonka-comprehendmedical",
        "//lib/services/amazonka-compute-optimizer",
        "//lib/services/amazonka-config",
        "//lib/services/amazonka-connect",
        "//lib/services/amazonka-connect-contact-lens",
        "//lib/services/amazonka-connectparticipant",
        "//lib/services/amazonka-cost-explorer",
        "//lib/services/amazonka-cur",
        "//lib/services/amazonka-customer-profiles",
        "//lib/services/amazonka-databrew",
        "//lib/services/amazonka-dataexchange",
        "//lib/services/amazonka-datapipeline",
        "//lib/services/amazonka-datasync",
        "//lib/services/amazonka-detective",
        "//lib/services/amazonka-devicefarm",
        "//lib/services/amazonka-devops-guru",
        "//lib/services/amazonka-directconnect",
        "//lib/services/amazonka-discovery",
        "//lib/services/amazonka-dlm",
        "//lib/services/amazonka-dms",
        "//lib/services/amazonka-docdb",
        "//lib/services/amazonka-ds",
        "//lib/services/amazonka-dynamodb",
        "//lib/services/amazonka-dynamodb-dax",
        "//lib/services/amazonka-dynamodb-streams",
        "//lib/services/amazonka-ebs",
        "//lib/services/amazonka-ec2",
        "//lib/services/amazonka-ec2-instance-connect",
        "//lib/services/amazonka-ecr",
        "//lib/services/amazonka-ecr-public",
        "//lib/services/amazonka-ecs",
        "//lib/services/amazonka-efs",
        "//lib/services/amazonka-eks",
        "//lib/services/amazonka-elastic-inference",
        "//lib/services/amazonka-elasticache",
        "//lib/services/amazonka-elasticbeanstalk",
        "//lib/services/amazonka-elasticsearch",
        "//lib/services/amazonka-elastictranscoder",
        "//lib/services/amazonka-elb",
        "//lib/services/amazonka-elbv2",
        "//lib/services/amazonka-emr",
        "//lib/services/amazonka-emr-containers",
        "//lib/services/amazonka-finspace",
        "//lib/services/amazonka-finspace-data",
        "//lib/services/amazonka-fis",
        "//lib/services/amazonka-fms",
        "//lib/services/amazonka-forecast",
        "//lib/services/amazonka-forecastquery",
        "//lib/services/amazonka-frauddetector",
        "//lib/services/amazonka-gamelift",
        "//lib/services/amazonka-glacier",
        "//lib/services/amazonka-globalaccelerator",
        "//lib/services/amazonka-glue",
        "//lib/services/amazonka-grafana",
        "//lib/services/amazonka-greengrass",
        "//lib/services/amazonka-greengrassv2",
        "//lib/services/amazonka-groundstation",
        "//lib/services/amazonka-guardduty",
        "//lib/services/amazonka-health",
        "//lib/services/amazonka-healthlake",
        "//lib/services/amazonka-honeycode",
        "//lib/services/amazonka-iam",
        "//lib/services/amazonka-identitystore",
        "//lib/services/amazonka-imagebuilder",
        "//lib/services/amazonka-importexport",
        "//lib/services/amazonka-inspector",
        "//lib/services/amazonka-iot",
        "//lib/services/amazonka-iot-analytics",
        "//lib/services/amazonka-iot-dataplane",
        "//lib/services/amazonka-iot-jobs-dataplane",
        "//lib/services/amazonka-iot1click-devices",
        "//lib/services/amazonka-iot1click-projects",
        "//lib/services/amazonka-iotdeviceadvisor",
        "//lib/services/amazonka-iotevents",
        "//lib/services/amazonka-iotevents-data",
        "//lib/services/amazonka-iotfleethub",
        "//lib/services/amazonka-iotsecuretunneling",
        "//lib/services/amazonka-iotsitewise",
        "//lib/services/amazonka-iotthingsgraph",
        "//lib/services/amazonka-iotwireless",
        "//lib/services/amazonka-ivs",
        "//lib/services/amazonka-kafka",
        "//lib/services/amazonka-kafkaconnect",
        "//lib/services/amazonka-kinesis",
        "//lib/services/amazonka-kinesis-analytics",
        "//lib/services/amazonka-kinesis-firehose",
        "//lib/services/amazonka-kinesis-video",
        "//lib/services/amazonka-kinesis-video-archived-media",
        "//lib/services/amazonka-kinesis-video-media",
        "//lib/services/amazonka-kinesis-video-signaling",
        "//lib/services/amazonka-kinesisanalyticsv2",
        "//lib/services/amazonka-kms",
        "//lib/services/amazonka-lakeformation",
        "//lib/services/amazonka-lambda",
        "//lib/services/amazonka-lex-models",
        "//lib/services/amazonka-lex-runtime",
        "//lib/services/amazonka-license-manager",
        "//lib/services/amazonka-lightsail",
        "//lib/services/amazonka-location",
        "//lib/services/amazonka-lookoutequipment",
        "//lib/services/amazonka-lookoutmetrics",
        "//lib/services/amazonka-lookoutvision",
        "//lib/services/amazonka-macie",
        "//lib/services/amazonka-maciev2",
        "//lib/services/amazonka-managedblockchain",
        "//lib/services/amazonka-marketplace-analytics",
        "//lib/services/amazonka-marketplace-catalog",
        "//lib/services/amazonka-marketplace-entitlement",
        "//lib/services/amazonka-marketplace-metering",
        "//lib/services/amazonka-mechanicalturk",
        "//lib/services/amazonka-mediaconnect",
        "//lib/services/amazonka-mediaconvert",
        "//lib/services/amazonka-medialive",
        "//lib/services/amazonka-mediapackage",
        "//lib/services/amazonka-mediapackage-vod",
        "//lib/services/amazonka-mediastore",
        "//lib/services/amazonka-mediastore-dataplane",
        "//lib/services/amazonka-mediatailor",
        "//lib/services/amazonka-memorydb",
        "//lib/services/amazonka-mgn",
        "//lib/services/amazonka-migrationhub",
        "//lib/services/amazonka-migrationhub-config",
        "//lib/services/amazonka-ml",
        "//lib/services/amazonka-mobile",
        "//lib/services/amazonka-mq",
        "//lib/services/amazonka-mwaa",
        "//lib/services/amazonka-neptune",
        "//lib/services/amazonka-network-firewall",
        "//lib/services/amazonka-networkmanager",
        "//lib/services/amazonka-nimble",
        "//lib/services/amazonka-opensearch",
        "//lib/services/amazonka-opsworks",
        "//lib/services/amazonka-opsworks-cm",
        "//lib/services/amazonka-organizations",
        "//lib/services/amazonka-outposts",
        "//lib/services/amazonka-panorama",
        "//lib/services/amazonka-personalize",
        "//lib/services/amazonka-personalize-events",
        "//lib/services/amazonka-personalize-runtime",
        "//lib/services/amazonka-pi",
        "//lib/services/amazonka-pinpoint",
        "//lib/services/amazonka-pinpoint-email",
        "//lib/services/amazonka-pinpoint-sms-voice",
        "//lib/services/amazonka-polly",
        "//lib/services/amazonka-pricing",
        "//lib/services/amazonka-proton",
        "//lib/services/amazonka-qldb",
        "//lib/services/amazonka-qldb-session",
        "//lib/services/amazonka-quicksight",
        "//lib/services/amazonka-ram",
        "//lib/services/amazonka-rds",
        "//lib/services/amazonka-rds-data",
        "//lib/services/amazonka-redshift",
        "//lib/services/amazonka-redshift-data",
        "//lib/services/amazonka-rekognition",
        "//lib/services/amazonka-resourcegroups",
        "//lib/services/amazonka-resourcegroupstagging",
        "//lib/services/amazonka-robomaker",
        "//lib/services/amazonka-route53",
        "//lib/services/amazonka-route53-autonaming",
        "//lib/services/amazonka-route53-domains",
        "//lib/services/amazonka-route53-recovery-cluster",
        "//lib/services/amazonka-route53-recovery-control-config",
        "//lib/services/amazonka-route53-recovery-readiness",
        "//lib/services/amazonka-route53resolver",
        "//lib/services/amazonka-s3",
        "//lib/services/amazonka-s3outposts",
        "//lib/services/amazonka-sagemaker",
        "//lib/services/amazonka-sagemaker-a2i-runtime",
        "//lib/services/amazonka-sagemaker-edge",
        "//lib/services/amazonka-sagemaker-featurestore-runtime",
        "//lib/services/amazonka-sagemaker-runtime",
        "//lib/services/amazonka-savingsplans",
        "//lib/services/amazonka-schemas",
        "//lib/services/amazonka-sdb",
        "//lib/services/amazonka-secretsmanager",
        "//lib/services/amazonka-securityhub",
        "//lib/services/amazonka-serverlessrepo",
        "//lib/services/amazonka-service-quotas",
        "//lib/services/amazonka-servicecatalog",
        "//lib/services/amazonka-servicecatalog-appregistry",
        "//lib/services/amazonka-ses",
        "//lib/services/amazonka-sesv2",
        "//lib/services/amazonka-shield",
        "//lib/services/amazonka-signer",
        "//lib/services/amazonka-sms",
        "//lib/services/amazonka-snow-device-management",
        "//lib/services/amazonka-snowball",
        "//lib/services/amazonka-sns",
        "//lib/services/amazonka-sqs",
        "//lib/services/amazonka-ssm",
        "//lib/services/amazonka-ssm-contacts",
        "//lib/services/amazonka-ssm-incidents",
        "//lib/services/amazonka-sso",
        "//lib/services/amazonka-sso-admin",
        "//lib/services/amazonka-sso-oidc",
        "//lib/services/amazonka-stepfunctions",
        "//lib/services/amazonka-storagegateway",
        "//lib/services/amazonka-sts",
        "//lib/services/amazonka-support",
        "//lib/services/amazonka-swf",
        "//lib/services/amazonka-synthetics",
        "//lib/services/amazonka-textract",
        "//lib/services/amazonka-transcribe",
        "//lib/services/amazonka-transfer",
        "//lib/services/amazonka-translate",
        "//lib/services/amazonka-voice-id",
        "//lib/services/amazonka-waf",
        "//lib/services/amazonka-waf-regional",
        "//lib/services/amazonka-wellarchitected",
        "//lib/services/amazonka-wisdom",
        "//lib/services/amazonka-workdocs",
        "//lib/services/amazonka-worklink",
        "//lib/services/amazonka-workmail",
        "//lib/services/amazonka-workmailmessageflow",
        "//lib/services/amazonka-workspaces",
        "//lib/services/amazonka-xray",
    ],
)

genrule(
    name = "metadata",
    srcs = [":docs"],
    outs = ["metadata.yaml"],
    cmd = """
printf 'packages:\n' >>$(OUTS)

declare -a pkgs
declare -A dirs
for dir in $(SRCS); do
  dir="$${dir##*/}"
  pkg="$${dir#libZS}"
  pkg="$${pkg#servicesZS}"
  pkg="$${pkg#*ZS}"

  if [[ $$pkg != amazonka* ]]; then
     continue
  fi

  pkgs+=($$pkg)
  dirs[$$pkg]=$$dir
done

IFS=$$'\n' pkgs=($$(sort <<<"$${pkgs[*]}")); unset IFS

for pkg in "$${pkgs[@]}"; do
  dir=$${dirs[$$pkg]}
  printf '  - name: "%s"\n'  "$$pkg" >>$(OUTS)
  printf '    link: "/docs/%s"\n' "$$dir" >>$(OUTS)
done
""",
)

genrule(
    name = "index",
    srcs = [
        "templates/index.html",
        ":metadata",
    ],
    outs = ["index.html"],
    cmd = """\
$(execpath @stackage-exe//pandoc) \
  -V path_prefix=/ \
  -f markdown \
  -t html \
  -s \
  --template=$(execpath :templates/index.html) \
  --metadata=title:"Amazonka" \
  --metadata-file=$(execpath :metadata) \
  -o $(OUTS)
""",
    tools = ["@stackage-exe//pandoc"],
)

pkg_files(
    name = "stylesheets",
    srcs = glob(["stylesheets/*.css"]),
    strip_prefix = strip_prefix.from_pkg(),
)

pkg_files(
    name = "fonts",
    srcs = glob(["fonts/*.woff"]),
    strip_prefix = strip_prefix.from_pkg(),
)

pkg_files(
    name = "package_docs",
    srcs = [
        ":docs",
    ],
    prefix = "",
    strip_prefix = strip_prefix.from_pkg(),
)

pkg_tar(
    name = "bundle",
    srcs = [
        "CNAME",
        ":fonts",
        ":index",
        ":package_docs",
        ":stylesheets",
    ],
)

py_binary(
    name = "serve",
    srcs = ["serve.py"],
    args = ["$(rootpath :bundle)"],
    data = [":bundle"],
)
